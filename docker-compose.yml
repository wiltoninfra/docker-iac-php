version: '3.2'
# Criando Redes
networks:
  net-local:
    driver: bridge
    ipam:
      driver: default
      config:
      -
        subnet: 172.38.1.0/24

# Servidor 1 - Banco de Dados
services:
   mysql:
      build:
        context: .
        dockerfile: ./DockerFiles/Dockerfile-mysql
      container_name: mysql
      environment:
        - MYSQL_ROOT_PASSWORD={MYSQL_ROOT_PASSWORD}
        - MYSQL_PASSWORD={MYSQL_PASSWORD}
        - MYSQL_DATABASE={MYSQL_DATABASE}
        - MYSQL_USER={MYSQL_USER}
      ports:
        - "3306:3306"
      volumes:
        - "./infra/mysql/db:/var/www/html"
      networks:
        net-local:
          ipv4_address: 172.38.1.2
      extra_hosts:
          - "app01.local:172.38.1.5"
          - "app02.local:172.38.1.5"
          - "app03.local:172.38.1.5"

# Servidor 2 - Gerenciador do Banco de Dados Web

   phpmyadmin:
      container_name: phpmyadmin
      image: phpmyadmin/phpmyadmin
      links:
         - mysql:mysql
      environment:
        - PMA_ARBITRARY=1
      restart: always
      ports:
       - "8080:80"
      networks:
        net-local:
          ipv4_address: 172.38.1.3

 # Servidor 3 Redis - Cached and NoSql database
   redis:
      container_name: redis
      image: redis:alpine
      restart: always
      ports:
       - "6379:6379"
      networks:
        net-local:
          ipv4_address: 172.38.1.4
      extra_hosts:
          - "app01.local:172.38.1.5"
          - "app02.local:172.38.1.5"
          - "app03.local:172.38.1.5"

 # Servidor 3 - Webserver Apache
   php:
      build:
        context: .
        dockerfile: ./DockerFiles/Dockerfile-php56
      container_name: web
      links:
        - mysql:mysql
        - redis:redis
      environment:
        XDEBUG_CONFIG: "remote_host=172.38.1.5"
        PHP_IDE_CONFIG: "serverName=web"
      ports:
       - "80:80"
       - "9001:9001"
      restart: always
      volumes:
        - "./dev:/var/www/html"
        - "./infra/php/php.ini:/etc/php5/apache2/php.ini"
        - "./infra/apache/sites-available:/etc/apache2/sites-available/"
        - "./infra/apache/sites-enabled:/etc/apache2/sites-enabled/"
        - "./infra/apache/logs:/var/log/apache2/"
        - "./infra/graylog/config/collector_sidecar.yml:/etc/graylog/collector-sidecar/collector_sidecar.yml"
      networks:
        net-local:
          ipv4_address: 172.38.1.5
      extra_hosts:
          - "app01.local:172.38.1.5"
          - "app02.local:172.38.1.5"
          - "app03.local:172.38.1.5"

  # MongoDB: https://hub.docker.com/_/mongo/
   mongo:
      image: mongo:3
  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/5.5/docker.html
      networks:
        net-local:
          ipv4_address: 172.38.1.6
      extra_hosts:
          - "app01.local:172.38.1.5"
          - "app02.local:172.38.1.5"
          - "app03.local:172.38.1.5"
   elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:5.6.5
      environment:
        - http.host=0.0.0.0
      # Disable X-Pack security: https://www.elastic.co/guide/en/elasticsearch/reference/5.5/security-settings.html#general-security-settings
        - xpack.security.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      networks:
        net-local:
          ipv4_address: 172.38.1.7
      extra_hosts:
          - "app01.local:172.38.1.5"
          - "app02.local:172.38.1.5"
          - "app03.local:172.38.1.5"
  # Graylog: https://hub.docker.com/r/graylog/graylog/
   graylog:
      image: graylog/graylog:2.4.0-1
      links:
        - mongo
        - elasticsearch
      ports:
      # Graylog web interface and REST API
        - 9000:9000
      # Syslog TCP
        - 514:514
      # Syslog UDP
        - 514:514/udp
      # GELF TCP
        - 12201:12201
      # GELF UDP
        - 12201:12201/udp
      networks:
        net-local:
          ipv4_address: 172.38.1.8
      extra_hosts:
          - "app01.local:172.38.1.5"
          - "app02.local:172.38.1.5"
          - "app03.local:172.38.1.5"

   prometheus:
      image: quay.io/prometheus/prometheus
      container_name: prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention=200h'
        - '--web.enable-lifecycle'
    # restart: unless-stopped
      volumes:
        - "./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      expose:
        - 9090
      networks:
        net-local:
          ipv4_address: 172.38.1.9
      labels:
        org.label-schema.group: "monitoring"
